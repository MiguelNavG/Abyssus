theme(legend.title = element_blank())+
theme_update(plot.title = element_text(hjust = 0.5))+
ggtitle("Modificaciones en C1 en versión 2")+
labs(x='Valor de parametro C1', y ='Valor', caption = 'Source data: SimulacionesDeParametrosCRF.txt')+
scale_color_manual(values=c("mediumorchid3","mediumorchid2","mediumpurple","mediumpurple4","mediumorchid1","deepskyblue"))
jpeg("Modificaciones en C1 en versión 2.jpg", width = 800,height = 400)
c1v2<-c1[c1$Version==2,]
dev.new()
grafc1v2<- ggplot(c1v2,aes(x=c1v2$Val.Par,y=c1v2$Valor,group=c1v2Simulacion,color=Simulacion)) +
geom_point() +
geom_line() +
facet_wrap(~Resultado, scales='free_y') +
theme(legend.title = element_blank())+
theme_update(plot.title = element_text(hjust = 0.5))+
ggtitle("Modificaciones en C1 en versión 2")+
labs(x='Valor de parametro C1', y ='Valor', caption = 'Source data: SimulacionesDeParametrosCRF.txt')+
scale_color_manual(values=c("mediumorchid3","mediumorchid2","mediumpurple","mediumpurple4","mediumorchid1","deepskyblue"))
jpeg("Modificaciones en C1 en versión 2.jpg", width = 800,height = 400)
grafc1v2
c1<-read.table("c1datos.tsv", header =T, sep='\t')
prc1<-c1[c1$Simulacion=="Promedio",]
prc1$Version<-as.factor(prc1$Version)
dev.new()
grafc1<- ggplot(prc1,aes(x= prc1$Val.Par,y=prc1$Valor,group=Version,color=Version)) +
geom_point() +
geom_line() +
facet_wrap(~prc1$Resultado, scales='free_y') +
theme_bw() +
theme_update(plot.title = element_text(hjust = 0.5))+
labs(x='Valor de parametro C1', y ='Valor', caption = 'Source data: SimulacionesDeParametrosCRF.txt')+
ggtitle("Modificaciones de parámetro C1 entre versiones 2 y 3")
jpeg("Modificaciones de parámetro C1 entre versiones 2 y 3.jpg", width = 800,height = 400)
grafc1
c1<-read.table("c1datos.tsv", header =T, sep='\t')
prc1<-c1[c1$Simulacion=="Promedio",]
prc1$Version<-as.factor(prc1$Version)
dev.new()
grafc1<- ggplot(prc1,aes(x= prc1$Val.Par,y=prc1$Valor,group=Version,color=Version)) +
geom_point() +
geom_line() +
facet_wrap(~prc1$Resultado, scales='free_y') +
theme_bw() +
theme_update(plot.title = element_text(hjust = 0.5))+
labs(x='Valor de parametro C1', y ='Valor', caption = 'Source data: SimulacionesDeParametrosCRF.txt')+
ggtitle("Modificaciones de parámetro C1 entre versiones 2 y 3")
grafc1
jpeg("Modificaciones de parámetro C1 entre versiones 2 y 3.jpg", width = 800,height = 400)
grafc1
c1v2<-c1[c1$Version==2,]
dev.new()
grafc1v2<- ggplot(c1v2,aes(x=c1v2$Val.Par,y=c1v2$Valor,group=c1v2Simulacion,color=Simulacion)) +
geom_point() +
geom_line() +
facet_wrap(~Resultado, scales='free_y') +
theme(legend.title = element_blank())+
theme_update(plot.title = element_text(hjust = 0.5))+
ggtitle("Modificaciones en C1 en versión 2")+
labs(x='Valor de parametro C1', y ='Valor', caption = 'Source data: SimulacionesDeParametrosCRF.txt')+
scale_color_manual(values=c("mediumorchid3","mediumorchid2","mediumpurple","mediumpurple4","mediumorchid1","deepskyblue"))
jpeg("Modificaciones en C1 en versión 2.jpg", width = 800,height = 400)
grafc1v2
View(c1)
View(c1)
View(c1)
View(c1)
c1v2<-c1[c1$Version==2,]
dev.new()
grafc1v2<- ggplot(c1v2,aes(x=c1v2$Val.Par,y=c1v2$Valor,group=Simulacion,color=Simulacion)) +
geom_point() +
geom_line() +
facet_wrap(~Resultado, scales='free_y') +
theme(legend.title = element_blank())+
theme_update(plot.title = element_text(hjust = 0.5))+
ggtitle("Modificaciones en C1 en versión 2")+
labs(x='Valor de parametro C1', y ='Valor', caption = 'Source data: SimulacionesDeParametrosCRF.txt')+
scale_color_manual(values=c("mediumorchid3","mediumorchid2","mediumpurple","mediumpurple4","mediumorchid1","deepskyblue"))
jpeg("Modificaciones en C1 en versión 2.jpg", width = 800,height = 400)
grafc1v2
grafc1v2
c1v2<-c1[c1$Version==2,]
dev.new()
grafc1v2<- ggplot(c1v2,aes(x=c1v2$Val.Par,y=c1v2$Valor,group=Simulacion,color=Simulacion)) +
geom_point() +
geom_line() +
facet_wrap(~Resultado, scales='free_y') +
theme(legend.title = element_blank())+
theme_update(plot.title = element_text(hjust = 0.5))+
ggtitle("Modificaciones en C1 en versión 2")+
labs(x='Valor de parametro C1', y ='Valor', caption = 'Source data: SimulacionesDeParametrosCRF.txt')+
scale_color_manual(values=c("mediumorchid3","mediumorchid2","mediumpurple","mediumpurple4","mediumorchid1","deepskyblue"))
jpeg("Modificaciones en C1 en versión 2.jpg", width = 800,height = 400)
grafc1v2
grafc1v2
c1v3<-c1[c1$Version==3,]
grafc1v3<- ggplot(c1v3,aes(x=c1v3$Val.Par,y=c1v3$Valor,group=Simulacion,color=Simulacion)) +
geom_point() +
geom_line() +
facet_wrap(~Resultado, scales='free_y') +
ggtitle("Modificaciones en C1 en CRF versión 3")+
theme(legend.title = element_blank())+
labs(x='Valor de parametro C1', y ='Valor', caption = 'Source data: SimulacionesDeParametrosCRF.txt')+
scale_color_manual(values=c("mediumorchid3","mediumorchid2","mediumpurple","mediumpurple4","darkorchid","deepskyblue"))
grafc1v2
grafc1v3
grafc1v3
c1v3<-c1[c1$Version==3,]
grafc1v3<- ggplot(c1v3,aes(x=c1v3$Val.Par,y=c1v3$Valor,group=Simulacion,color=Simulacion)) +
geom_point() +
geom_line() +
facet_wrap(~Resultado, scales='free_y') +
ggtitle("Modificaciones en C1 en CRF versión 3")+
theme(legend.title = element_blank())+
labs(x='Valor de parametro C1', y ='Valor', caption = 'Source data: SimulacionesDeParametrosCRF.txt')+
scale_color_manual(values=c("mediumorchid3","mediumorchid2","mediumpurple","mediumpurple4","darkorchid","deepskyblue"))
grafc1v2
grafc1v3
prc2<-c2[c2$Corrida=="Promedio"]
prc2$Version<-as.factor(prc2$Version)
prc2<-c2[c2$Corrida=="Promedio",]
prc2$Version<-as.factor(prc2$Version)
grafc2<- ggplot(prc2,aes(x= prc2$Val.Par,y=prc2$Valor,group=Version,color=Version)) +
geom_point() +
geom_line() +
theme(legend.title = element_blank())+
facet_wrap(~prc2$Resultado, scales='free_y') +
ggtitle("Comparación de modificaciones de C2 en versión 2 y 3")+
theme_bw() +
labs(x='Valor de parametro C2', y ='Valor', caption = 'Source data: SimulacionesDeParametrosCRF.txt')
grafc2
prit<-it[it$Corrida=="Promedio",]
grafit<- ggplot(prit,aes(x= prit$Val.Par,y=prit$Valor,group=prit$Version,color=as.factor(prit$Version))) +
geom_point() +
geom_line() +
facet_wrap(~prit$Resultado, scales='free_y') +
ggtitle("Comparación de número máximo de iteraciones entre versión 2 y 3")+
theme(legend.title = element_blank())+
labs(x='Numero maximo de iteraciones', y ='Valor', caption = 'Source data: SimulacionesDeParametrosCRF.txt')
graf6
genes<-c(gen1:gen50000)
genes<-c('gen'1:50000)
help("list")
genes<-c('gen'&1:50000)
genes<-c('gen',1:50000)
genes
genes<-c('gen[1:50000]')
genes
genes<-c({'gen'}1:500)
genes<-c(1:50000)
genes<-c(1:50000)
paste("gen",1:50000,sep=" ")
genes<-paste("gen",1:50000,sep=" ")
categorias<-sample(c("Activador","Represor","Ambivalente"),50000,replace = T,prob = c(0.5,0.4,0.1))
categorias
install.packages(demerelate)
??demerelpop
install.packages("Demerelate")
demerelpop
data(demerelpop)
data("demerelref")
require(Demerelate)
data("demerelref")
View(demerelref)
data("demerelpop")
View(demerelpop)
data("demereldist")
View(demereldist)
levels(demerelref$population)
levels(demerelpop$population)
levels(demerelpop$Individual)
levels(demerelpop)
levels(demerelpop$Individual)
levels(demerelpop$Individual)-levels(demerelpop$population)
isoformas<-rbinom(50000,5,0.5)
genes<-paste("gen",1:50000,sep=" ")
help("replace")
isosformas1<-replace(isoformas,0,1)
isoformas
isoformas1
genes<-paste("gen",1:50000,sep=" ")
isoformas<-rbinom(50000,5,0.5)
isosformas1<-replace(isoformas,0,1)
isoformas
isoformas1
isosformas1<-replace(isoformas,0,1)
isoformas1<-replace(isoformas,0,1)
isoformas1
isoformas
rexp
help(rexp)
help("which")
ceros<-which(isoformas==0)
ceros
isoformas
help("replace")
isoformas1<-replace(isoformas,ceros,1)
isoformas1
tau<-rnorm(50000,10,1)
length(unique(tau))
help(rexp)
decaimiento<-rexp(isoformas1,tau)
decaimiento
isoformas1
sum(isoformas1)
decaimiento<-rexp(isoformas1,rep(tau))
length(decaimiento)
help(rep)
decaimiento<-rexp(isoformas1,rep(tau,isoformas1))
length(decaimiento)
taus<-rep(tau,isoformas1)
taus
length(taus)
length(decaimiento)
tau<-rnorm(50000,10,1)
length(unique(tau))
taus<-rep(tau,isoformas1)
decaimiento<-rexp(sum(tau),taus)
decaimiento
decaimiento
length(decaimiento)
help(rexp)
visoformas<-sum(isoformas)
visoformas
decaimiento<-rexp(sum(isoformas1),taus)
length(decaimiento)
tejido<-sample(c('Tejido A','Tejido B'),c(0.6,0.4))
genes<-paste("gen",1:50000,sep=" ")
isoformas<-rbinom(50000,5,0.5)
ceros<-which(isoformas==0)
isoformas1<-replace(isoformas,ceros,1)
tau<-rnorm(50000,10,1)
length(unique(tau))
taus<-rep(tau,isoformas1)
decaimiento<-rexp(sum(isoformas1),taus)
tejido<-sample(c('Tejido A','Tejido B'),c(0.6,0.4))
tejido
help("sample")
tejido<-sample(c('Tejido A','Tejido B'),sum(isoformas1),replace=T,c(0.6,0.4))
tejido
genesrep<-rep(genes,isoformas1)
resumen<-cbind.data.frame(genesrep,decaimiento)
resumen
estables<-tapply(resumen$decaimiento,resumen$genesrep,which.min)
estables
genesrep
estables<-tapply(resumen$decaimiento,resumen$genesrep,which.min(x))
estables<-tapply(resumen$decaimiento,resumen$genesrep,which.min())
estables<-tapply(resumen$decaimiento,resumen$genesrep,function(x){
which.min(resumen$decaimiento)
})
estables
estables<-tapply(resumen$decaimiento,resumen$genesrep,which.min)
estables
resumen
resumen<-cbind.data.frame(genesrep,decaimiento,tejido)
resumen
estables<-tapply(resumen$decaimiento,resumen$genesrep,which.min)
estables
length(estables)
sum(isoformas1)
estables<-tapply(1:26513,resumen$genesrep,list(which.min(resumen$decaimiento),']'))
estables<-tapply(1:26513,resumen$genesrep,list(which.min(resumen$decaimiento),"["))
estables<-tapply(1:26513,resumen$genesrep,list(which.min(resumen$decaimiento),"]"))
estables<-tapply(1:26513,resumen$genesrep,function(x){
i<-which.min(resumen$decaimiento[x])
resumen[i]
})
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
i<-which.min(resumen$decaimiento[x])
resumen[i]
})
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
i<-which.min(resumen$decaimiento[x])
resumen[i,]
})
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
i[a]<-which.min(resumen$decaimiento[x])
a<-a+1
})
i<-c(1:50000)
a<-1
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
i[a]<-which.min(resumen$decaimiento[x])
a<-a+1
})
resumen[indices,]
resumen[i,]
i
resumen$decaimiento[1:5]
which.min(resumen$decaimiento[1:5])
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
which.min(resumen$decaimiento[x])
})
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
which.min(resumen$decaimiento[x])
})
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
t<-which.min(resumen$decaimiento[x])
return(t)
})
t
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
which.min(resumen$decaimiento[x])
})
which.min(resumen$decaimiento[1:5])
resumen[5,]
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
resumen[which.min(resumen$decaimiento[x]),]
})
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
minimo<-min(resumen$decaimiento[x])
return(resumen[x==minimo,])
})
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
minimo<-min(resumen$decaimiento[x])
resumen[x==minimo,]
})
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
minimo<-which.min(resumen$decaimiento[x])
resumen[x[minimo],]
})
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
minimo<-which.min(resumen$decaimiento[x])
x[minimo]
})
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
minimo<-which.min(resumen$decaimiento[x])
return(x[minimo])
})
genes<-paste("gen",1:50000,sep=" ")
isoformas<-rbinom(50000,5,0.5)
ceros<-which(isoformas==0)
isoformas1<-replace(isoformas,ceros,1)
tau<-rnorm(50000,10,1)
length(unique(tau))
taus<-rep(tau,isoformas1)
decaimiento<-rexp(sum(isoformas1),taus)
tejido<-sample(c('Tejido A','Tejido B'),sum(isoformas1),replace=T,c(0.6,0.4))
genesrep<-rep(genes,isoformas1)
resumen<-cbind.data.frame(genesrep,decaimiento,tejido)
estables<-tapply(1:length(decaimiento),resumen$genesrep,function(x){
x[which.min(resumen$decaimiento[x])]
})
resumen[estables,]
media<-rgamma(1500000,5,2)
valexpr<-rnorm(1500000,media,media/2)
media
length(unique(media))
length(unique(valexpr))
head(valexpr)
columnas<-paste('Replica',1:15,rep(c('A'|'B'),each=15),sep = " ")
columnas<-paste('Replica',1:15,rep(c('A'||'B'),each=15),sep = " ")
columnas<-paste('Replica',1:15,rep(c('A','B'),each=15),sep = " ")
columnas
datos<-matrix(valexpr,ncol = 30)
genes<-paste("gen",1:50000,sep=" ")
categorias<-sample(c("Activador","Represor","Ambivalente"),50000,replace = T,prob = c(0.5,0.4,0.1))
categorias
media<-rgamma(1500000,5,2)
valexpr<-rnorm(1500000,media,media/2)
columnas<-paste('Replica',1:15,rep(c('A','B'),each=15),sep = " ")
columnas
datos<-matrix(valexpr,ncol = 30)
colnames(datos)<-columnas
rownames(datos)<-genes
head(datos)
head(datos)
media<-rgamma(1500000,5,2)
valexpr<-rnorm(1500000,media,media/2)
columnas<-paste('Replica',1:15,rep(c('A','B'),each=15),sep = " ")
registro<-matrix(valexpr,ncol = 30)
colnames(registro)<-columnas
rownames(registro)<-genes
head(registro)
sample(30,registro)
registro[sample(30,1:50000),]
registro[sample(1,1:50000),]
registro[sample(30,1:50000),]
registro[c(sample(30,1:50000)),]
aleatorio<-sample(30,1:50000)
registro[aleatorio,]
aleatorio
help("sample")
registro[sample(1:50000,30),]
registrodf<-as.data.frame(registro)
registrodf
registrodf<-as.data.frame(registro)
registrodf
aleatorio<-registrodf[sample(1:50000,30),]
aleatorio
length(unique(colnames(aleatorio)))
help("ylim")
require(ggplot2)
colorblind_pal()
help("lines")
help("lines")
plot(aleatorio)
help("ylim")
lines(aleatorio)
aleatorio2<-registrodf[sample(1:50000,10),]
aleatorio2
tapply(aleatorio2[,1:15],1,mean)
tapply(aleatorio2,1,mean)
tapply(aleatorio2,1,mean())
tapply(aleatorio2,2,mean)
apply(aleatorio2[,1:15],1,mean)
condicionB<-apply(aleatorio2[,16:30],1,mean)
aleatorio2<-registrodf[sample(1:50000,10),]
condicionA<-apply(aleatorio2[,1:15],1,mean)
condicionB<-apply(aleatorio2[,16:30],1,mean)
AB<-cbind(condicionA,condicionB)
AB
help("barplot")
barplot(AB)
barplot(AB,beside = T)
AB
AB<-t(AB)
AB
barplot(AB,beside = T)
aleatorio
help("lines")
lines(aleatorio)
registrodf<-as.data.frame(registro)
aleatorio<-registrodf[sample(1:50000,30),]
aleatorio
plot.new()
lines(aleatorio)
aleatorio
registrodf<-as.data.frame(registro)
aleatorio<-registrodf[sample(1:50000,30),]
aleatorio
plot.new()
apply(aleatorio,1,lines[x,])
apply(aleatorio,1,lines(aleatorio[x,])
}
apply(aleatorio,1,lines(aleatorio[x,])
registrodf<-as.data.frame(registro)
genes<-paste("gen",1:50000,sep=" ")
categorias<-sample(c("Activador","Represor","Ambivalente"),50000,replace = T,prob = c(0.5,0.4,0.1))
media<-rgamma(1500000,5,2)
valexpr<-rnorm(1500000,media,media/2)
columnas<-paste('Replica',1:15,rep(c('A','B'),each=15),sep = " ")
registro<-matrix(valexpr,ncol = 30)
colnames(registro)<-columnas
rownames(registro)<-genes
head(registro)
registrodf<-as.data.frame(registro)
aleatorio<-registrodf[sample(1:50000,30),]
aleatorio
plot.new()
apply(aleatorio,1,lines(aleatorio[x,])
apply(aleatorio,1,lines(aleatorio[x,]))
apply(aleatorio,1,function(x){
lines(aleatorio[x,])
})
plot.new()
apply(aleatorio,1,function(x){
lines(aleatorio[x,])
})
registrodf<-as.data.frame(registro)
aleatorio<-registrodf[sample(1:50000,30),]
aleatorio
plot.new(
apply(aleatorio,1,function(x){
lines(aleatorio[x,])
}))
registrodf<-as.data.frame(registro)
aleatorio<-registrodf[sample(1:50000,30),]
aleatorio
plot(aleatorio)
registrodf<-as.data.frame(registro)
aleatorio<-registrodf[sample(1:50000,30),]
aleatorio
#plot(aleatorio)
apply(aleatorio,1,function(x){
lines(x)
})
registrodf<-as.data.frame(registro)
aleatorio<-registrodf[sample(1:50000,30),]
aleatorio
#plot(aleatorio)
plot.new()
apply(aleatorio,1,function(x){
lines(x)
})
registrodf<-as.data.frame(registro)
aleatorio<-registrodf[sample(1:50000,30),]
aleatorio
#plot(aleatorio)
plot.new()
apply(aleatorio,1,function(x){
lines(x[1:30])
})
registrodf<-as.data.frame(registro)
aleatorio<-registrodf[sample(1:50000,30),]
aleatorio
#plot(aleatorio)
plot.new()
apply(aleatorio,1,function(x){
print(x)
})
help("pdf")
setwd("C:\Users\Dell\Documents\LCG\3er-Semestre\Bioinfo_I\Abyssus")
setwd("Users\Dell\Documents\LCG\3er-Semestre\Bioinfo_I\Abyssus")
getwd()
setwd("C:Users/Dell/Documents/LCG/3er-Semestre/Bioinfo_I/Abyssus")
setwd("LCG/3er-Semestre/Bioinfo_I/Abyssus")
compuesto<-read.table('COMPOUND.txt')
setwd("LCG/3er-Semestre/Bioinfo_I/Abyssus")
setwd("LCG/3er-Semestre/Bioinfo_I/Abyssus")
getwd()
compuesto<-read.table('COMPOUND.txt', sep = '\t')
compuesto
